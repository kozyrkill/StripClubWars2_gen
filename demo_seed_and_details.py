#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ seed –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
- –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π seed –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
- –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã (—Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏, –º–∞–∫–∏—è–∂, —Å—Ç–∏–ª—å –≤–æ–ª–æ—Å –∏ —Ç.–¥.)
- –†–∞–∑–ª–∏—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
"""

from scw_image_generator import SCWImageGenerator, CharacterAttributes
from test_characters import get_detailed_test_characters, get_simple_test_characters, get_extreme_test_characters

def demo_seed_consistency():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ seed"""
    
    print("üéØ –î–ï–ú–û: –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π seed –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    
    gen = SCWImageGenerator('demo_seed', 'demo')
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    char = CharacterAttributes(
        gender="f", age_group=1, ethnicity="w",
        hair_color="l", hair_length="l", hair_style="c",  # –±–ª–æ–Ω–¥–∏–Ω–∫–∞ —Å –∫—É–¥—Ä—è–º–∏
        makeup="m", tattoos="s", expression="f"           # –º–∞–∫–∏—è–∂, —Ç–∞—Ç—É, —Ñ–ª–∏—Ä—Ç
    )
    
    print("üë© –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂:")
    print(f"  –ë–∞–∑–æ–≤—ã–µ: {char.gender}{char.age_group}{char.ethnicity}")
    print(f"  –í–æ–ª–æ—Å—ã: {char.hair_color} (—Å–≤–µ—Ç–ª—ã–µ), {char.hair_length} (–¥–ª–∏–Ω–Ω—ã–µ), {char.hair_style} (–∫—É–¥—Ä—è–≤—ã–µ)")
    print(f"  –î–µ—Ç–∞–ª–∏: –º–∞–∫–∏—è–∂ {char.makeup}, —Ç–∞—Ç—É {char.tattoos}, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ {char.expression}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∏ seed –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    print("\nüîÑ –¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏:")
    for i in range(3):
        char_id = gen.generate_character_id(char)
        seed = gen.generate_character_seed(char_id)
        prompt = gen.build_base_prompt(char)
        print(f"  {i+1}. ID: {char_id} ‚Üí seed: {seed}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π seed
    fixed_id = "demo123"
    seed1 = gen.generate_character_seed(fixed_id)
    seed2 = gen.generate_character_seed(fixed_id)
    
    print(f"\n‚úÖ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID '{fixed_id}':")
    print(f"  –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤: {seed1}")
    print(f"  –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤: {seed2}")
    print(f"  –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: {'–û–ö' if seed1 == seed2 else '–û–®–ò–ë–ö–ê'}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = gen.build_base_prompt(char)
    print(f"\nüìù –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç:")
    print(f"  {prompt}")
    print()

def demo_character_varieties():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"""
    
    print("üë• –î–ï–ú–û: –†–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π")
    print("=" * 60)
    
    gen = SCWImageGenerator('demo_varieties', 'demo')
    
    # –ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
    simple_chars = get_simple_test_characters()
    print(f"üî∞ –ü—Ä–æ—Å—Ç—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ({len(simple_chars)} —à—Ç):")
    for i, char in enumerate(simple_chars):
        char_id = gen.generate_character_id(char)
        seed = gen.generate_character_seed(char_id)
        print(f"  {i+1}. {char.gender}{char.age_group}{char.ethnicity} ‚Üí ID: {char_id}, seed: {seed}")
    
    # –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
    detailed_chars = get_detailed_test_characters()
    print(f"\n‚≠ê –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ({len(detailed_chars)} —à—Ç):")
    for i, char in enumerate(detailed_chars[:3]):  # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
        char_id = gen.generate_character_id(char)
        seed = gen.generate_character_seed(char_id)
        details = f"—Å—Ç–∏–ª—å:{char.clothing_style}, –º–∞–∫–∏—è–∂:{char.makeup}, —Ç–∞—Ç—É:{char.tattoos}"
        print(f"  {i+1}. {char.gender}{char.age_group}{char.ethnicity} ({details}) ‚Üí ID: {char_id}, seed: {seed}")
    
    # –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
    extreme_chars = get_extreme_test_characters()
    print(f"\nüî• –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ ({len(extreme_chars)} —à—Ç):")
    for i, char in enumerate(extreme_chars):
        char_id = gen.generate_character_id(char)
        seed = gen.generate_character_seed(char_id)
        details = f"—Ä–∞–∑–º–µ—Ä:{char.breast_penis_size}, —Ç–∞—Ç—É:{char.tattoos}, —Å—Ç–∏–ª—å:{char.clothing_style}"
        print(f"  {i+1}. {char.gender}{char.age_group}{char.ethnicity} ({details}) ‚Üí ID: {char_id}, seed: {seed}")
    print()

def demo_prompt_details():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã"""
    
    print("üìù –î–ï–ú–û: –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã")
    print("=" * 60)
    
    gen = SCWImageGenerator('demo_prompts', 'demo')
    
    # –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
    extreme_char = CharacterAttributes(
        gender="f", age_group=0, ethnicity="w",
        height="s", body_shape="s", breast_penis_size="s",
        hair_color="d", hair_length="l", hair_style="c",
        makeup="h", tattoos="l", piercings="m",
        expression="f", clothing_style="g"
    )
    
    print("üé≠ –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–æ—Ç–∏—á–µ—Å–∫–∞—è –¥–µ–≤—É—à–∫–∞:")
    prompt = gen.build_base_prompt(extreme_char)
    print(f"–ü—Ä–æ–º–ø—Ç: {prompt}")
    print(f"–î–ª–∏–Ω–∞: {len(prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print()
    
    # –ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    simple_char = CharacterAttributes(gender="f", age_group=2, ethnicity="w")
    simple_prompt = gen.build_base_prompt(simple_char)
    
    print("üë© –ü—Ä–æ—Å—Ç–∞—è –∂–µ–Ω—â–∏–Ω–∞:")
    print(f"–ü—Ä–æ–º–ø—Ç: {simple_prompt}")
    print(f"–î–ª–∏–Ω–∞: {len(simple_prompt)} —Å–∏–º–≤–æ–ª–æ–≤")
    print()
    
    print("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:")
    print(f"  –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {len(prompt.split(','))} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    print(f"  –ü—Ä–æ—Å—Ç–æ–π: {len(simple_prompt.split(','))} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    print(f"  –†–∞–∑–Ω–∏—Ü–∞: +{len(prompt.split(',')) - len(simple_prompt.split(','))} –¥–µ—Ç–∞–ª–µ–π")

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–π"""
    
    print("üöÄ SCW Image Generator: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π")
    print("="*70)
    print()
    
    demo_seed_consistency()
    print()
    demo_character_varieties()
    print()  
    demo_prompt_details()
    print()
    
    print("‚ú® –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
    print("  python scw_image_generator.py --test --test-type simple")
    print("  python scw_image_generator.py --test --test-type detailed") 
    print("  python scw_image_generator.py --test --test-type extreme")
    print()
    print("üéâ –¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏–º–µ–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π seed –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π!")

if __name__ == "__main__":
    main()
