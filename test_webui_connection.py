#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Stable Diffusion WebUI
"""

import requests
import json

WEBUI_URL = "http://localhost:7860"
WEBUI_API_URL = f"{WEBUI_URL}/sdapi/v1"

def test_webui_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebUI –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Stable Diffusion WebUI...")
    print(f"URL: {WEBUI_URL}")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        response = requests.get(f"{WEBUI_API_URL}/options", timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ WebUI API –¥–æ—Å—Ç—É–ø–µ–Ω!")
        else:
            print(f"‚ùå WebUI API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª–∏
        print("\n2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏...")
        try:
            options = response.json()
            model_name = options.get("sd_model_checkpoint", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            print(f"üìä –ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: {model_name}")
        except:
            print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ txt2img API
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ txt2img API...")
        test_payload = {
            "prompt": "test",
            "steps": 1,
            "width": 64,
            "height": 64,
            "cfg_scale": 1,
        }
        
        response = requests.post(f"{WEBUI_API_URL}/txt2img", json=test_payload, timeout=30)
        
        if response.status_code == 200:
            print("‚úÖ txt2img API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            result = response.json()
            if result.get("images"):
                print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∞!")
            else:
                print("‚ö†Ô∏è  API –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è")
        else:
            print(f"‚ùå txt2img API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.text:
                print(f"–û—à–∏–±–∫–∞: {response.text}")
            return False
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—ç–º–ø–ª–µ—Ä–æ–≤
        print("\n4. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—ç–º–ø–ª–µ—Ä—ã...")
        try:
            response = requests.get(f"{WEBUI_API_URL}/samplers", timeout=10)
            if response.status_code == 200:
                samplers = response.json()
                sampler_names = [s["name"] for s in samplers]
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(sampler_names)} —Å—ç–º–ø–ª–µ—Ä–æ–≤:")
                for name in sampler_names[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"   ‚Ä¢ {name}")
                if len(sampler_names) > 5:
                    print(f"   ... –∏ –µ—â–µ {len(sampler_names) - 5}")
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—ç–º–ø–ª–µ—Ä–æ–≤: {e}")
        
        print("\n" + "=" * 50)
        print("üéâ WebUI –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π:")
        print("python scw_image_generator.py --test")
        
        return True
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebUI")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("1. Stable Diffusion WebUI –∑–∞–ø—É—â–µ–Ω")
        print("2. WebUI –∑–∞–ø—É—â–µ–Ω —Å —Ñ–ª–∞–≥–æ–º --api:")
        print("   python launch.py --api")
        print("3. WebUI –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É http://localhost:7860")
        return False
        
    except requests.exceptions.Timeout:
        print("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ")
        print("WebUI –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å")
        return False
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = test_webui_connection()
    
    if not success:
        print("\nüîß –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É WebUI —Å API:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é Stable Diffusion WebUI")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python launch.py --api")
        print("3. –î–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        
        exit(1)

if __name__ == "__main__":
    main()
